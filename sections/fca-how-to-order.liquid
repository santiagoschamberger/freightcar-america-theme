{%- style -%}
  @font-face {
    font-family: 'Outage';
    src: url('{{ 'Outage.ttf' | asset_url }}') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: 'Gotham';
    src: url('{{ 'Gotham-Book.otf' | asset_url }}') format('opentype');
    font-weight: 400;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: 'Gotham';
    src: url('{{ 'Gotham-Medium.otf' | asset_url }}') format('opentype');
    font-weight: 500;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: 'Gotham';
    src: url('{{ 'Gotham-Bold.otf' | asset_url }}') format('opentype');
    font-weight: 700;
    font-style: normal;
    font-display: swap;
  }

  .fca-how-to-order {
    position: relative;
    min-height: 780px;
    display: flex;
    align-items: center;
    background: {% if section.settings.background_image %}url('{{ section.settings.background_image | image_url }}'){% else %}#FFFFFF{% endif %};
    background-size: cover;
    background-position: center;
    color: #00205B;
    overflow: hidden;
  }

  .fca-how-to-order__container {
    width: 100%;
    margin: 0 auto;
    padding: 0;
    position: relative;
    overflow: hidden;
  }

  .fca-how-to-order__title {
    font-family: 'Outage', sans-serif;
    font-weight: 700;
    font-size: 60px;
    line-height: 1.2;
    text-align: center;
    margin-bottom: 80px;
    color: #122F5B;
    padding: 0 20px;
  }

  /* Red highlight class for title text */
  .fca-how-to-order .red-highlight {
    color: #D31244;
    display: inline;
    background: none;
    padding: 0;
    clip-path: none;
  }

  .fca-how-to-order .red-highlight::before {
    display: none;
  }

  .fca-how-to-order__slider {
    position: relative;
    height: 400px;
    overflow: hidden;
    width: 100%;
    margin: 0 auto;
    touch-action: pan-x;
  }

  .fca-how-to-order__slides {
    display: flex;
    transition: transform 0.5s ease-in-out;
    height: 100%;
    width: 100%;
  }

  .fca-how-to-order__slide {
    min-width: 100%;
    flex-shrink: 0;
    display: grid;
    grid-template-columns: 40% 1fr;
    gap: 0;
    align-items: center;
    position: relative;
    padding: 0;
    height: 400px;
  }

  .fca-how-to-order__image-column {
    height: 100%;
    position: relative;
    overflow: hidden;
  }

  .fca-how-to-order__step-image {
    width: 100%;
    height: 100%;
    object-fit: contain;
    object-position: center;
    display: block;
  }

  .fca-how-to-order__content-column {
    background: #FFFFFF;
    padding: 60px 80px;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: relative;
  }

  .fca-how-to-order__step-title {
    font-family: 'Gotham', sans-serif;
    font-weight: 700;
    font-size: 24px;
    line-height: 1.08;
    color: #D31244;
    margin: 0 0 12px 0;
    position: relative;
    z-index: 1;
  }

  .fca-how-to-order__step-description {
    font-family: 'Gotham', sans-serif;
    font-weight: 400;
    font-size: 20px;
    line-height: 1.3;
    color: #00205B;
    margin: 0;
    position: relative;
    z-index: 1;
  }

  .fca-how-to-order__navigation {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 40px;
    margin-top: 80px;
    position: relative;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
  }

  .fca-how-to-order__progress {
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .fca-how-to-order__progress-dot {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: #D9D9D9;
    cursor: pointer;
    transition: all 0.3s ease;
    border: 2px solid transparent;
  }

  .fca-how-to-order__progress-dot.active {
    background: #D31244;
    transform: scale(1.1);
  }

  .fca-how-to-order__progress-dot:hover {
    transform: scale(1.05);
  }

  .fca-how-to-order__arrow {
    width: 32px;
    height: 32px;
    background: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .fca-how-to-order__arrow:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .fca-how-to-order__arrow svg {
    width: 21px;
    height: 21px;
  }

  .fca-how-to-order__button {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    background: #D31244;
    color: white;
    padding: 20px 24px 17px;
    text-decoration: none;
    font-family: 'Outage', sans-serif;
    font-weight: 700;
    font-size: 20px;
    line-height: 1;
    border-radius: 0;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
    margin-top: 60px;
  }

  .fca-how-to-order__button:hover {
    background: #BF0D3D;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(211, 18, 68, 0.3);
  }

  @media (max-width: 768px) {
    .fca-how-to-order {
      min-height: 600px;
      padding: 60px 0;
    }

    .fca-how-to-order__container {
      padding: 0 20px;
    }

    .fca-how-to-order__title {
      font-size: 32px;
      margin-bottom: 40px;
      text-align: left;
    }

    .fca-how-to-order__slider {
      height: auto;
      overflow: hidden;
    }

    .fca-how-to-order__slide {
      min-width: 100%;
      flex-shrink: 0;
      height: auto;
      display: flex;
      flex-direction: column;
      grid-template-columns: none;
      padding: 0;
      gap: 0;
    }

    .fca-how-to-order__image-column {
      width: 100%;
      height: 250px;
      order: 1;
    }

    .fca-how-to-order__content-column {
      width: 100%;
      padding: 40px 30px;
      order: 2;
      height: auto;
    }

    .fca-how-to-order__navigation {
      margin-top: 40px;
      gap: 20px;
    }

    .fca-how-to-order__arrow {
      display: none;
    }
  }

  @media (max-width: 480px) {
    .fca-how-to-order__container {
      padding: 0 16px;
    }

    .fca-how-to-order__title {
      font-size: 28px;
    }

    .fca-how-to-order__slide {
      min-width: 100%;
      flex-shrink: 0;
      padding: 0;
      gap: 0;
    }

    .fca-how-to-order__image-column {
      height: 200px;
    }

    .fca-how-to-order__content-column {
      padding: 30px 20px;
    }

    .fca-how-to-order__step-title {
      font-size: 20px;
    }

    .fca-how-to-order__step-description {
      font-size: 16px;
    }
  }
{%- endstyle -%}

<section class="fca-how-to-order">
  <div class="fca-how-to-order__container">
    {%- if section.settings.title != blank -%}
      <h2 class="fca-how-to-order__title">
        {%- if section.settings.red_highlight_text != blank -%}
          {%- assign red_replacement = '<span class="red-highlight">' | append: section.settings.red_highlight_text | append: '</span>' -%}
          {%- assign highlighted_title = section.settings.title | replace: section.settings.red_highlight_text, red_replacement -%}
          {{ highlighted_title }}
        {%- else -%}
          {{ section.settings.title }}
        {%- endif -%}
      </h2>
    {%- endif -%}
    
    <div class="fca-how-to-order__slider">
      <div class="fca-how-to-order__slides" id="howToOrderSlides">
        {%- for block in section.blocks -%}
          <div class="fca-how-to-order__slide" {{ block.shopify_attributes }}>
            <div class="fca-how-to-order__image-column">
              {%- if block.settings.image != blank -%}
                <img src="{{ block.settings.image | image_url }}" 
                     alt="{{ block.settings.title | escape }}" 
                     class="fca-how-to-order__step-image">
              {%- else -%}
                {%- assign step_images = 'number1.png,number2.png,number3.png,number4.png' | split: ',' -%}
                {%- assign image_name = step_images[forloop.index0] -%}
                <img src="{{ image_name | asset_url }}" 
                     alt="{{ block.settings.title | escape }}" 
                     class="fca-how-to-order__step-image">
              {%- endif -%}
            </div>
            <div class="fca-how-to-order__content-column">
              {%- if block.settings.title != blank -%}
                <h3 class="fca-how-to-order__step-title">{{ block.settings.title }}</h3>
              {%- endif -%}
              {%- if block.settings.description != blank -%}
                <p class="fca-how-to-order__step-description">{{ block.settings.description }}</p>
              {%- endif -%}
            </div>
          </div>
        {%- endfor -%}
      </div>
    </div>

    <div class="fca-how-to-order__navigation">
      <div class="fca-how-to-order__progress">
        {%- for block in section.blocks -%}
          <div class="fca-how-to-order__progress-dot{% if forloop.first %} active{% endif %}" 
               onclick="goToSlide({{ forloop.index0 }})" 
               role="button" 
               tabindex="0"
               aria-label="Go to slide {{ forloop.index }}"></div>
        {%- endfor -%}
      </div>

      <button class="fca-how-to-order__arrow" onclick="nextSlide()" aria-label="Next slide">
        <svg width="21" height="21" viewBox="0 0 21 21" fill="none">
          <path d="M7 3.5L13.5 10.5L7 17.5" stroke="#122F5B" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div>

    {%- if section.settings.button_text != blank and section.settings.button_url != blank -%}
      <div style="text-align: center; padding: 0 20px;">
        <a href="{{ section.settings.button_url }}" class="fca-how-to-order__button">
          {{ section.settings.button_text }}
        </a>
      </div>
    {%- endif -%}
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    let currentSlide = 0;
    const totalSlides = {{ section.blocks.size }};
    let autoAdvanceTimer;
    let isUserInteracting = false;
    
    const slidesContainer = document.getElementById('howToOrderSlides');
    const dots = document.querySelectorAll('.fca-how-to-order__progress-dot');
    
    // Touch/swipe support
    let startX = 0;
    let startY = 0;
    let deltaX = 0;
    let deltaY = 0;
    let isTracking = false;

    function updateSlider() {
      if (!slidesContainer) return;
      
      // Ensure currentSlide is within bounds
      if (currentSlide >= totalSlides) {
        currentSlide = 0;
      } else if (currentSlide < 0) {
        currentSlide = totalSlides - 1;
      }
      
      slidesContainer.style.transform = `translateX(-${currentSlide * 100}%)`;
      
      dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === currentSlide);
      });
    }

    function resetSlider() {
      currentSlide = 0;
      if (slidesContainer) {
        slidesContainer.style.transform = 'translateX(0%)';
      }
      dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === 0);
      });
    }

    function goToSlide(index) {
      if (index >= 0 && index < totalSlides) {
        currentSlide = index;
        updateSlider();
        resetAutoAdvance();
      }
    }

    function nextSlide() {
      currentSlide = (currentSlide + 1) % totalSlides;
      updateSlider();
      resetAutoAdvance();
    }

    function prevSlide() {
      currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
      updateSlider();
      resetAutoAdvance();
    }

    function startAutoAdvance() {
      if (totalSlides > 1 && !isUserInteracting) {
        autoAdvanceTimer = setInterval(() => {
          if (!isUserInteracting) {
            nextSlide();
          }
        }, 8000); // Increased from 5s to 8s to be less aggressive
      }
    }

    function stopAutoAdvance() {
      if (autoAdvanceTimer) {
        clearInterval(autoAdvanceTimer);
        autoAdvanceTimer = null;
      }
    }

    function resetAutoAdvance() {
      stopAutoAdvance();
      setTimeout(startAutoAdvance, 2000); // Wait 2s before restarting auto-advance
    }

    // Touch event handlers
    function handleStart(e) {
      const touch = e.touches ? e.touches[0] : e;
      startX = touch.clientX;
      startY = touch.clientY;
      isTracking = true;
      isUserInteracting = true;
      stopAutoAdvance();
    }

    function handleMove(e) {
      if (!isTracking) return;
      
      const touch = e.touches ? e.touches[0] : e;
      deltaX = touch.clientX - startX;
      deltaY = touch.clientY - startY;
      
      // Prevent default scrolling if horizontal swipe is detected
      if (Math.abs(deltaX) > Math.abs(deltaY)) {
        e.preventDefault();
      }
    }

    function handleEnd(e) {
      if (!isTracking) return;
      
      isTracking = false;
      
      // Minimum swipe distance
      const minSwipeDistance = 50;
      
      if (Math.abs(deltaX) > minSwipeDistance && Math.abs(deltaX) > Math.abs(deltaY)) {
        if (deltaX > 0) {
          prevSlide();
        } else {
          nextSlide();
        }
      }
      
      deltaX = 0;
      deltaY = 0;
      
      setTimeout(() => {
        isUserInteracting = false;
        startAutoAdvance();
      }, 1000);
    }

    // Add touch event listeners
    if (slidesContainer) {
      slidesContainer.addEventListener('touchstart', handleStart, { passive: false });
      slidesContainer.addEventListener('touchmove', handleMove, { passive: false });
      slidesContainer.addEventListener('touchend', handleEnd);
      
      // Mouse events for desktop
      slidesContainer.addEventListener('mousedown', handleStart);
      slidesContainer.addEventListener('mousemove', handleMove);
      slidesContainer.addEventListener('mouseup', handleEnd);
      slidesContainer.addEventListener('mouseleave', handleEnd);
    }

    // Pause auto-advance when user hovers over navigation
    const navigation = document.querySelector('.fca-how-to-order__navigation');
    if (navigation) {
      navigation.addEventListener('mouseenter', () => {
        isUserInteracting = true;
        stopAutoAdvance();
      });
      
      navigation.addEventListener('mouseleave', () => {
        isUserInteracting = false;
        startAutoAdvance();
      });
    }

    // Global functions for onclick handlers
    window.goToSlide = goToSlide;
    window.nextSlide = nextSlide;
    window.prevSlide = prevSlide;
    window.resetSlider = resetSlider;

    // Add keyboard support for dots
    dots.forEach((dot, index) => {
      dot.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          goToSlide(index);
        }
      });
    });

    // Initialize slider on first load
    resetSlider();
    
    // Start auto-advance after a short delay
    setTimeout(startAutoAdvance, 1000);
    
    // Reset slider if window is resized (helps with responsive issues)
    let resizeTimeout;
    window.addEventListener('resize', function() {
      clearTimeout(resizeTimeout);
      resizeTimeout = setTimeout(() => {
        updateSlider();
      }, 250);
    });
  });
</script>

{% schema %}
{
  "name": "FCA How to Order",
  "tag": "section",
  "class": "section-fca-how-to-order",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "How to Order"
    },
    {
      "type": "text",
      "id": "red_highlight_text",
      "label": "Text to Highlight (Red)",
      "default": "ORDER",
      "info": "This text will be highlighted in red in the title"
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background Image"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "Request an account"
    },
    {
      "type": "url",
      "id": "button_url",
      "label": "Button URL"
    }
  ],
  "blocks": [
    {
      "type": "step",
      "name": "Order Step",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Step Image"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Step Title",
          "default": "Step Title"
        },
        {
          "type": "textarea",
          "id": "description",
          "label": "Step Description",
          "default": "Step description goes here."
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "FCA How to Order",
      "settings": {
        "title": "How to Order",
        "red_highlight_text": "ORDER",
        "button_text": "Request an account"
      },
      "blocks": [
        {
          "type": "step",
          "settings": {
            "title": "Create an Account",
            "description": "Set up a quick, secure account to manage your orders and track your parts."
          }
        },
        {
          "type": "step",
          "settings": {
            "title": "Browse Our Catalog",
            "description": "Search through our extensive inventory of railcar parts and components."
          }
        },
        {
          "type": "step",
          "settings": {
            "title": "Place Your Order",
            "description": "Add items to your cart and complete your order with secure checkout."
          }
        },
        {
          "type": "step",
          "settings": {
            "title": "Track & Receive",
            "description": "Monitor your order status and receive your parts on time."
          }
        }
      ]
    }
  ]
}
{% endschema %} 